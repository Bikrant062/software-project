{
    "collections": [
        {
            "name": "File Handling",
            "snippets": [
                {
                    "title": "Write a C program to write a character and display it using fgetc() and fputc() functions.",
                    "code": "#include<stdio.h>\nint main(){\n    FILE *fp;\n    char ch, c;\n    fp = fopen(\"./filechar.txt\", \"w+\");\n    printf(\"Enter a character: \");\n    scanf(\"%s\", &ch);\n    fputc(ch, fp);\n    printf(\"Reading the file\\n\");\n    rewind(fp);\n    c = fgetc(fp);\n    printf(\"The entered character is %c\", c);\n    printf(\"\\nProgram executed by darshan subedi XII 746\");\n}",
                    "outputImage": "./assets/filehandling_ii/1_output.PNG",
                    "fileImage": "./assets/filehandling_ii/1_file.PNG"
                },
                {
                    "title": "Write a C program to write a number and display it using getw() and putw() functions.",
                    "code": "#include<stdio.h>\n\nint main(){\n    FILE *fp;\n    int n,n1;\n    fp = fopen(\"./fileint.txt\",\"w+\");\n    printf(\"Enter a number: \");\n    scanf(\"%d\",&n);\n    putw(n,fp);\n    printf(\"Reading the file\\n\");\n    rewind(fp);\n    n1 = getw(fp);\n    printf(\"The entered number is %d\\n\",n1);\n    printf(\"Program executed by darshan subedi XII 746\");\n}",
                    "outputImage": "./assets/filehandling_ii/2_output.PNG",
                    "fileImage": "./assets/filehandling_ii/2_file.PNG"
                }
            ]
        },
        {
            "name": "Dynamic Memory Allocation",
            "snippets": [
                {
                    "title": "Write a C program to demonstrate the use of malloc() and free().",
                    "code": "#include<stdio.h>\n#include<stdlib.h>\n\nint main(){\n    int *ptr;\n    ptr = (int*)malloc(5 * sizeof(int));\n    if (ptr == NULL) {\n        printf(\"Memory allocation failed!\\n\");\n        return 1;\n    }\n    for (int i = 0; i < 5; i++) {\n        ptr[i] = i + 1;\n    }\n    printf(\"Stored values: \");\n    for (int i = 0; i < 5; i++) {\n        printf(\"%d \", ptr[i]);\n    }\n    free(ptr);\n    return 0;\n}",
                    "outputImage": "./assets/malloc_output.PNG",
                    "fileImage": "./assets/malloc_file.PNG"
                }
            ]
        },
        {
            "name":"C programmin",
            "snippets":[
                {
                    "title":"",
                    "code":"#include <stdio.h>\n\n#define MAX_EMPLOYEES 5\n\n// Structure to store employee details\nstruct Employee {\n    int id;\n    char name[50];\n    int age;\n    char address[100];\n    float salary;\n};\n\nint main() {\n    struct Employee employees[MAX_EMPLOYEES];\n    int count = 0;\n\n    // Accepting details of 5 employees\n    printf(\"Enter details of %d employees:\\n\", MAX_EMPLOYEES);\n    for (int i = 0; i < MAX_EMPLOYEES; i++) {\n        printf(\"\\nEmployee %d:\\n\", i + 1);\n        printf(\"ID: \");\n        scanf(\"%d\", &employees[i].id);\n        printf(\"Name: \");\n        scanf(\" %[^\n]\", employees[i].name);  // To accept full name with spaces\n        printf(\"Age: \");\n        scanf(\"%d\", &employees[i].age);\n        printf(\"Address: \");\n        scanf(\" %[^\n]\", employees[i].address);\n        printf(\"Salary: \");\n        scanf(\"%f\", &employees[i].salary);\n\n        // Counting employees with salary between 25000 and 30000\n        if (employees[i].salary >= 25000 && employees[i].salary <= 30000) {\n            count++;\n        }\n    }\n\n    // Displaying details of all employees\n    printf(\"\\nEmployee Records:\\n\");\n    printf(\"-----------------------------------------------------------\\n\");\n    printf(\"ID\\tName\\t\\tAge\\tAddress\\t\\tSalary\\n\");\n    printf(\"-----------------------------------------------------------\\n\");\n    for (int i = 0; i < MAX_EMPLOYEES; i++) {\n        printf(\"%d\\t%s\\t%d\\t%s\\t%.2f\\n\",\n               employees[i].id, employees[i].name, employees[i].age,\n               employees[i].address, employees[i].salary);\n    }\n\n    // Displaying count of employees in salary range 25000-30000\n    printf(\"\\nTotal employees with salary between 25000 and 30000: %d\\n\", count);\n\n    // Signature line\n    printf(\"\\nDone by Bikrant Lekhak\\n\");\n\n    return 0;\n}",
                    "outpuImage":"./assets/filehandling_ii/question_no_37_by_bikrantlekhak.png",
                    "fileImage":""
                }
            ]
        }
    ]
}
